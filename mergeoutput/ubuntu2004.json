{
    "variables": {
        "vcs_ref": "",
        "runner_user": "runner",
        "runner_home": "/home/runner",
        "access_key": "{{env `AWS_ACCESS_KEY_ID`}}",
        "secret_key": "{{env `AWS_SECRET_ACCESS_KEY`}}",
        "image_folder": "/imagegeneration",
        "commit_file": "/imagegeneration/commit.txt",
        "imagedata_file": "/imagegeneration/imagedata.json",
        "metadata_file": "/imagegeneration/metadatafile",
        "installer_script_folder": "/imagegeneration/installers",
        "helper_script_folder": "/imagegeneration/helpers",
        "image_version": "dev",
        "image_os": "ubuntu20",
        "github_feed_token": "{{env `MEROXA_MACHINE`}}",
        "go_default": "1.17",
        "go_versions": "1.16 1.17",
        "subnet_id": "{{env `PACKER_SUBNET_ID`}}",
        "aws_account": "{{env `PACKER_AWS_ACCOUNT`}}"
    },
    "sensitive-variables": [
        "access_key",
        "secret_key",
        "github_feed_token"
    ],
    "builders": [
        {
            "name": "focal",
            "region": "us-east-1",
            "type": "amazon-ebs",
            "access_key": "{{user `access_key`}}",
            "secret_key": "{{user `secret_key`}}",
            "ssh_keypair_name": "meroxa-aws-ci",
            "ssh_agent_auth": true,
            "ssh_username": "runner",
            "subnet_id": "{{user `subnet_id`}}",
            "source_ami_filter": {
                "filters": {
                    "virtualization-type": "hvm",
                    "name": "github-runner-base-focal",
                    "root-device-type": "ebs"
                },
                "owners": [
                    "{{user `aws_account`}}"
                ],
                "most_recent": true
            },
            "instance_type": "m5.xlarge",
            "ami_name": "github-runner-focal-{{strftime \"%m-%d-%Y_%H-%M\"}}",
            "force_deregister": true,
            "force_delete_snapshot": true,
            "ami_regions": [
                "us-east-1"
            ],
            "tags": {
                "Name": "github-runner-focal-{{isotime \"20060102150405\"}}",
                "os": "ubuntu",
                "source": "github-runner",
                "service": "ci",
                "env": "dev"
            },
            "launch_block_device_mappings": [
                {
                    "device_name": "/dev/sda1",
                    "volume_size": 100,
                    "volume_type": "gp2",
                    "delete_on_termination": true
                }
            ]
        }
    ],
    "provisioners": [
        {
            "type": "shell",
            "inline": [
                "echo 127.0.0.1 $(hostname) >> /etc/hosts",
                "apt-get update",
                "apt-get -y install --no-install-recommends sudo apt-utils software-properties-common lsb-release rsync",
                "apt-get -y install --no-install-recommends wget curl libunwind8 apt-transport-https ca-certificates",
                "apt-get -y install --no-install-recommends git ruby ohai locales",
                "locale-gen en_US.UTF-8",
                "export LANG=en_US.UTF-8 | tee -a /etc/environment"
            ],
            "environment_vars": [
                "DEBIAN_FRONTEND=noninteractive"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "inline": [
                "mkdir {{user `image_folder`}}",
                "chmod 777 {{user `image_folder`}}"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "script": "{{template_dir}}/scripts/base/apt-mock.sh",
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "scripts": [
                "{{template_dir}}/scripts/base/repos.sh"
            ],
            "environment_vars": [
                "DEBIAN_FRONTEND=noninteractive"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "script": "{{template_dir}}/scripts/base/apt.sh",
            "environment_vars": [
                "DEBIAN_FRONTEND=noninteractive"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "script": "{{template_dir}}/scripts/base/limits.sh",
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "file",
            "source": "{{template_dir}}/scripts/helpers",
            "destination": "{{user `helper_script_folder`}}"
        },
        {
            "type": "file",
            "source": "{{template_dir}}/scripts/installers",
            "destination": "{{user `installer_script_folder`}}"
        },
        {
            "type": "file",
            "source": "{{ template_dir }}/post-generation",
            "destination": "{{user `image_folder`}}"
        },
        {
            "type": "file",
            "source": "{{template_dir}}/scripts/tests",
            "destination": "{{user `image_folder`}}"
        },
        {
            "type": "file",
            "source": "{{ template_dir }}/scripts/SoftwareReport",
            "destination": "{{user `image_folder`}}"
        },
        {
            "type": "file",
            "source": "{{template_dir}}/toolsets/toolset-2004.json",
            "destination": "{{user `installer_script_folder`}}/toolset.json"
        },
        {
            "type": "shell",
            "scripts": [
                "{{template_dir}}/scripts/installers/preimagedata.sh"
            ],
            "environment_vars": [
                "IMAGE_VERSION={{user `image_version`}}",
                "IMAGEDATA_FILE={{user `imagedata_file`}}"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "scripts": [
                "{{template_dir}}/scripts/installers/configure-environment.sh"
            ],
            "environment_vars": [
                "IMAGE_VERSION={{user `image_version`}}",
                "IMAGE_OS={{user `image_os`}}",
                "HELPER_SCRIPTS={{user `helper_script_folder`}}"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "scripts": [
                "{{template_dir}}/scripts/installers/complete-snap-setup.sh"
            ],
            "environment_vars": [
                "HELPER_SCRIPTS={{user `helper_script_folder`}}"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "scripts": [
                "{{template_dir}}/scripts/installers/powershellcore.sh"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "scripts": [
                "{{template_dir}}/scripts/installers/Install-PowerShellModules.ps1",
                "{{template_dir}}/scripts/installers/Install-AzureModules.ps1"
            ],
            "environment_vars": [
                "HELPER_SCRIPTS={{user `helper_script_folder`}}",
                "INSTALLER_SCRIPT_FOLDER={{user `installer_script_folder`}}"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} pwsh -f {{ .Path }}'"
        },
        {
            "type": "shell",
            "scripts": [
                "{{template_dir}}/scripts/installers/docker-compose.sh",
                "{{template_dir}}/scripts/installers/docker-moby.sh"
            ],
            "environment_vars": [
                "HELPER_SCRIPTS={{user `helper_script_folder`}}",
                "INSTALLER_SCRIPT_FOLDER={{user `installer_script_folder`}}",
                "DOCKERHUB_LOGIN={{user `dockerhub_login`}}",
                "DOCKERHUB_PASSWORD={{user `dockerhub_password`}}"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "scripts": [
                "{{template_dir}}/scripts/installers/azcopy.sh",
                "{{template_dir}}/scripts/installers/azure-cli.sh",
                "{{template_dir}}/scripts/installers/azure-devops-cli.sh",
                "{{template_dir}}/scripts/installers/basic.sh",
                "{{template_dir}}/scripts/installers/bicep.sh",
                "{{template_dir}}/scripts/installers/aliyun-cli.sh",
                "{{template_dir}}/scripts/installers/apache.sh",
                "{{template_dir}}/scripts/installers/aws.sh",
                "{{template_dir}}/scripts/installers/clang.sh",
                "{{template_dir}}/scripts/installers/swift.sh",
                "{{template_dir}}/scripts/installers/cmake.sh",
                "{{template_dir}}/scripts/installers/codeql-bundle.sh",
                "{{template_dir}}/scripts/installers/containers.sh",
                "{{template_dir}}/scripts/installers/dotnetcore-sdk.sh",
                "{{template_dir}}/scripts/installers/erlang.sh",
                "{{template_dir}}/scripts/installers/firefox.sh",
                "{{template_dir}}/scripts/installers/gcc.sh",
                "{{template_dir}}/scripts/installers/gfortran.sh",
                "{{template_dir}}/scripts/installers/git.sh",
                "{{template_dir}}/scripts/installers/github-cli.sh",
                "{{template_dir}}/scripts/installers/google-chrome.sh",
                "{{template_dir}}/scripts/installers/google-cloud-sdk.sh",
                "{{template_dir}}/scripts/installers/haskell.sh",
                "{{template_dir}}/scripts/installers/heroku.sh",
                "{{template_dir}}/scripts/installers/hhvm.sh",
                "{{template_dir}}/scripts/installers/java-tools.sh",
                "{{template_dir}}/scripts/installers/kubernetes-tools.sh",
                "{{template_dir}}/scripts/installers/oc.sh",
                "{{template_dir}}/scripts/installers/leiningen.sh",
                "{{template_dir}}/scripts/installers/miniconda.sh",
                "{{template_dir}}/scripts/installers/mono.sh",
                "{{template_dir}}/scripts/installers/kotlin.sh",
                "{{template_dir}}/scripts/installers/mysql.sh",
                "{{template_dir}}/scripts/installers/mssql-cmd-tools.sh",
                "{{template_dir}}/scripts/installers/sqlpackage.sh",
                "{{template_dir}}/scripts/installers/nginx.sh",
                "{{template_dir}}/scripts/installers/nvm.sh",
                "{{template_dir}}/scripts/installers/nodejs.sh",
                "{{template_dir}}/scripts/installers/bazel.sh",
                "{{template_dir}}/scripts/installers/oras-cli.sh",
                "{{template_dir}}/scripts/installers/phantomjs.sh",
                "{{template_dir}}/scripts/installers/php.sh",
                "{{template_dir}}/scripts/installers/postgresql.sh",
                "{{template_dir}}/scripts/installers/pulumi.sh",
                "{{template_dir}}/scripts/installers/ruby.sh",
                "{{template_dir}}/scripts/installers/r.sh",
                "{{template_dir}}/scripts/installers/rust.sh",
                "{{template_dir}}/scripts/installers/julia.sh",
                "{{template_dir}}/scripts/installers/sbt.sh",
                "{{template_dir}}/scripts/installers/selenium.sh",
                "{{template_dir}}/scripts/installers/terraform.sh",
                "{{template_dir}}/scripts/installers/packer.sh",
                "{{template_dir}}/scripts/installers/vcpkg.sh",
                "{{template_dir}}/scripts/installers/dpkg-config.sh",
                "{{template_dir}}/scripts/installers/mongodb.sh",
                "{{template_dir}}/scripts/installers/android.sh",
                "{{template_dir}}/scripts/installers/yq.sh",
                "{{template_dir}}/scripts/installers/pypy.sh",
                "{{template_dir}}/scripts/installers/python.sh",
                "{{template_dir}}/scripts/installers/graalvm.sh"
            ],
            "environment_vars": [
                "HELPER_SCRIPTS={{user `helper_script_folder`}}",
                "INSTALLER_SCRIPT_FOLDER={{user `installer_script_folder`}}",
                "DEBIAN_FRONTEND=noninteractive"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "scripts": [
                "{{template_dir}}/scripts/installers/Install-Toolset.ps1",
                "{{template_dir}}/scripts/installers/Configure-Toolset.ps1"
            ],
            "environment_vars": [
                "HELPER_SCRIPTS={{user `helper_script_folder`}}",
                "INSTALLER_SCRIPT_FOLDER={{user `installer_script_folder`}}"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} pwsh -f {{ .Path }}'"
        },
        {
            "type": "shell",
            "scripts": [
                "{{template_dir}}/scripts/installers/pipx-packages.sh"
            ],
            "environment_vars": [
                "HELPER_SCRIPTS={{user `helper_script_folder`}}",
                "INSTALLER_SCRIPT_FOLDER={{user `installer_script_folder`}}"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "scripts": [
                "{{template_dir}}/scripts/installers/homebrew.sh"
            ],
            "environment_vars": [
                "HELPER_SCRIPTS={{user `helper_script_folder`}}",
                "DEBIAN_FRONTEND=noninteractive",
                "INSTALLER_SCRIPT_FOLDER={{user `installer_script_folder`}}"
            ],
            "execute_command": "/bin/bash -c 'source /etc/environment && {{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "file",
            "source": "{{template_dir}}/etc/hosts",
            "destination": "/tmp/hosts"
        },
        {
            "type": "shell",
            "inline": [
                "mv -f /tmp/hosts /etc/",
                "chown root:root /etc/hosts"
            ],
            "environment_vars": [
                "RUNNER_HOME={{user `runner_home`}}"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "scripts": [
                "{{template_dir}}/scripts/installers/grub.sh"
            ],
            "environment_vars": [
                "RUNNER_HOME={{user `runner_home`}}"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "inline": [
                "rm -fv \"$RUNNER_HOME/*.tar.gz\"",
                "rm -fv \"$RUNNER_HOME/*.tar.bz2\"",
                "rm -fv \"$RUNNER_HOME/*.deb\"",
                "rm -fv \"$RUNNER_HOME/null\"",
                "rm -fv \"$RUNNER_HOME/Release.key\"",
                "rm -fv \"$RUNNER_HOME/install.sh\"",
                "rm -frv \"$RUNNER_HOME/azcopy\""
            ],
            "environment_vars": [
                "RUNNER_HOME={{user `runner_home`}}"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "scripts": [
                "{{template_dir}}/scripts/installers/Install-Awspowershell.ps1"
            ],
            "environment_vars": [
                "HELPER_SCRIPTS={{user `helper_script_folder`}}",
                "RUNNER_HOME={{user `runner_home`}}",
                "INSTALLER_SCRIPT_FOLDER={{user `installer_script_folder`}}"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} pwsh -f {{ .Path }}'"
        },
        {
            "type": "shell",
            "inline": [
                "chown -R {{user `runner_user`}}:{{user `runner_user`}} {{user `runner_home`}}",
                "usermod -aG docker {{user `runner_user`}}"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "pause_before": "60s",
            "start_retry_timeout": "10m",
            "scripts": [
                "{{template_dir}}/scripts/installers/cleanup.sh"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "script": "{{template_dir}}/scripts/base/apt-mock-remove.sh",
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "inline": "sleep 1",
            "environment_vars": [
                "IMAGE_VERSION={{user `image_version`}}",
                "INSTALLER_SCRIPT_FOLDER={{user `installer_script_folder`}}"
            ]
        },
        {
            "type": "shell",
            "scripts": [
                "{{template_dir}}/scripts/installers/post-deployment.sh"
            ],
            "environment_vars": [
                "HELPER_SCRIPT_FOLDER={{user `helper_script_folder`}}",
                "INSTALLER_SCRIPT_FOLDER={{user `installer_script_folder`}}",
                "IMAGE_FOLDER={{user `image_folder`}}"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        },
        {
            "type": "shell",
            "scripts": [
                "{{template_dir}}/scripts/installers/validate-disk-space.sh"
            ],
            "environment_vars": [
                "RUN_VALIDATION={{user `run_validation_diskspace`}}"
            ]
        },
        {
            "type": "file",
            "source": "{{template_dir}}/config/ubuntu2004.conf",
            "destination": "/tmp/"
        },
        {
            "type": "shell",
            "inline": [
                "mkdir -p /etc/vsts",
                "cp /tmp/ubuntu2004.conf /etc/vsts/machine_instance.conf"
            ],
            "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'"
        }
    ]
}